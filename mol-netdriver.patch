--- mol-0.9.69+20031019.orig/src/netdriver/Makefile.24
+++ mol-0.9.69+20031019/src/netdriver/Makefile.24
@@ -1,6 +1,6 @@
 # -*- makefile -*-
 
-obj-m		= tun.o sheep.o ethertap.o kuname.o
+obj-m		= sheep.o kuname.o
 
 sheep.o: .kuname
 .kuname: kuname.o
--- mol-0.9.69+20031019.orig/src/netdriver/Makefile.26
+++ mol-0.9.69+20031019/src/netdriver/Makefile.26
@@ -1,6 +1,6 @@
 # -*- makefile -*-
 
-obj-m		= tun.o ethertap.o sheep.o kuname.o
+obj-m		= sheep.o kuname.o
 
 $(obj)/sheep.o: $(src)/.kuname
 $(src)/.kuname: $(obj)/kuname.o
--- mol-0.9.69+20031019.orig/src/netdriver/Makefile.am
+++ mol-0.9.69+20031019/src/netdriver/Makefile.am
@@ -1,5 +1,5 @@
 
-EXTRA_DIST		= MAKEDEV kuname.c tun.c sheep.c ethertap.c if_tun.h \
+EXTRA_DIST		= MAKEDEV kuname.c sheep.c \
 			  Makefile.24 Makefile.26
 
 LV			:= $(shell test -f $(KERNEL_SOURCE)/Rules.make && echo 24 || echo 26)
@@ -16,19 +16,12 @@
 	@ln -sf ../Makefile.$(LV) build/Makefile
 
 setup-tree-26: setup-tree-common
-	@for x in tun.c ethertap.c ; do ln -sf $(KERNEL_SOURCE)/drivers/net/$$x build/ || exit 1 ; done
 
 setup-tree-24: setup-tree-common
-	@for x in tun.c ethertap.c if_tun.h ; do ln -sf ../$$x build/ || exit 1 ; done
-
-# The ethertap and tun driver is 2.4 only. Unfortunately, it is difficult to 
-# do a conditional build based upon the kuname result since kuname
-# is dynamically generated. We hack around this by building empty
-# modules and by deleting them in the all-local target.
 
 all-local: setup-tree-$(LV)
 	@$(MAKE) --no-print-directory -C $(KERNEL_SOURCE) "SUBDIRS=$$PWD/build" modules $(KILL_WARNING_$(LV))
-	@for x in tun ethertap sheep ; do \
+	@for x in sheep ; do \
 		[ -f build/$$x.$(MP) ] || continue ; \
 		$(NM) build/$$x.$(MP) | grep -q init_module || continue ; \
 		ln -f build/$$x.$(MP) $(MOD_DEST)/ || exit 1 ; \
